package com.psl.dao;

import java.util.List;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import com.psl.beans.Transaction;

public class BankDAOImpl extends JdbcDaoSupport implements IBankDAO {
	private JdbcTemplate template;

	public JdbcTemplate getTemplate() {
		return template;
	}

	public void setTemplate(JdbcTemplate template) {
		this.template = template;
	}

	// Replace template with getJdbcTemplate()
	/*
	 * @Override public void createEmployee(Transaction t) {
	 * //template.update("INSERT INTO employee VALUES(" + e.getId() + ", '" +
	 * e.getName() + "', '" + e.getEmail() + "');");
	 * getJdbcTemplate().update("INSERT INTO employee VALUES(" + e.getId() +
	 * ", '" + e.getName() + "', '" + e.getEmail() + "');");
	 * System.out.println("Inserted " + e); }
	 * 
	 * @Override public List<Employee> getAllEmployees() { return
	 * getJdbcTemplate().query("SELECT * FROM employee;", new
	 * RowMapper<Employee>(){
	 * 
	 * @Override public Employee mapRow(ResultSet rs, int rowNum) throws
	 * SQLException { Employee e = new Employee(); return new
	 * Employee(rs.getInt("id"), rs.getString("name"), rs.getString("email")); }
	 * }); }
	 * 
	 * @Override public void updateEmployee(int id, String name) {
	 * getJdbcTemplate().update("UPDATE employee SET name = '" + name +
	 * "' WHERE id = " + id); System.out.println("Updated record " + id); }
	 * 
	 * @Override public void deleteEmployee(int id) {
	 * getJdbcTemplate().update("DELETE FROM employee WHERE id=" + id);
	 * System.out.println("Deleted record " + id); }
	 */
	@Override
	public void newTransaction(Transaction t) {
		// TODO Auto-generated method stub

		// getJdbcTemplate().update("INSERT INTO employee VALUES(" + t.getId() +
		// ", '" + e.getName() + "', '" + e.getEmail() + "');");
		System.out.println("Inserted " + t);
	}

	@Override
	public List<Transaction> creatMiniStatement(String accountNumber) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public double fetchBalance(String accountNumber) {
		return template.queryForObject(
				"SELECT accBalance FROM accounts WHERE accNo = "
						+ accountNumber, Double.class);
		/*
		 * Transaction transaction = (Transaction)
		 * template.query("SELECT accBalance FROM accounts WHERE accNo = "+
		 * accountNumber, new RowMapper<Transaction>(){
		 * 
		 * @Override public Transaction mapRow(ResultSet rs, int rowNum) throws
		 * SQLException { return new Transaction(0, null, null, rs.getDouble(4)
		 * ,null); } }); return transaction.getBalance();
		 */
	}
}
