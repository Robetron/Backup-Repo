package com.psl;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Test {
	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>();
		list.add(0);
		list.add(1);
		list.add(2);
		list.add(3);
		list.add(4);
		list.add(5);
		list.add(6);
		list.add(7);
		list.add(8);
		list.add(9);
		list.add(15);
		list.add(27);
		list.add(45);
		
		System.out.println("Total in list is "+sumOfList(list));
		System.out.println("Total in (1,2,3,4,5) is "+sumOfList(1,2,3,4,5));
		
		System.out.println("Product in list is "+productOfList(list));
		System.out.println("Product in (1,2,3,4,5) is "+productOfList(1,2,3,4,5));
		
		System.out.println("Odd in list "+oddNumbers(list));
		System.out.println("Odd in (1,2,3,4,5) is "+oddNumbers(1,2,3,4,5));
		
		System.out.println("Even in list "+evenNumbers(list));
		System.out.println("Even in (1,2,3,4,5) is "+evenNumbers(1,2,3,4,5));
		
		System.out.println("Divisible by 3 in list "+divisibleBy(list,3));
		System.out.println("Divisible by 3 in (1,2,3,4,5) "+divisibleBy(3,1,2,3,4,5));
		
		System.out.println("Divisible by 3 and odd in list "+oddAndDivisibleBy(list,3));
		
		System.out.println("Divisible by 3 and even in list "+evenAndDivisibleBy(list,3));
		
		System.out.println("Multiples of 7 in list "+multiplesOf(list,7));
		
		
		System.out.println("Foo-Bar Test");
		foobar(list);
		System.out.println();
		
		System.out.println("Planet Test");
		planets(list);
		System.out.println();
	}
	public static int sumOfList(List<Integer> list){
		int returnSum=0;
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			returnSum+=(Integer) iterator.next();
		}
		return returnSum;
	}
	public static int sumOfList(Integer ...args){
		int returnSum=0;
		for (int i = 0; i < args.length; i++) {
			returnSum+=args[i];
		}
		return returnSum;
	}
	
	public static int productOfList(List<Integer> list){
		int returnProduct=1;
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			returnProduct*=(Integer) iterator.next();
		}
		return returnProduct;
	}
	public static int productOfList(Integer ...args){
		int returnProduct=1;
		for (int i = 0; i < args.length; i++) {
			returnProduct*=args[i];
		}
		return returnProduct;
	}
	
	public static ArrayList<Integer> oddNumbers(List<Integer> list){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i%2!=0) returnList.add(i);
		}
		return returnList;
	}
	public static ArrayList<Integer> oddNumbers(Integer ...args){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (int i = 0; i < args.length; i++) {
			if(args[i]%2!=0) returnList.add(args[i]);
		}
		return returnList;
	}
	
	public static ArrayList<Integer> evenNumbers(List<Integer> list){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i%2==0) returnList.add(i);
		}
		return returnList;
	}
	public static ArrayList<Integer> evenNumbers(Integer ...args){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (int i = 0; i < args.length; i++) {
			if(args[i]%2==0) returnList.add(args[i]);
		}
		return returnList;
	}
	
	public static ArrayList<Integer> divisibleBy(List<Integer> list, int divisor){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i>0 && i%divisor==0) returnList.add(i);
		}
		return returnList;
	}
	public static ArrayList<Integer> divisibleBy(int divisor, Integer ...args){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (int i = 0; i < args.length; i++) {
			if(args[i]>0 && args[i]%divisor==0) returnList.add(args[i]);
		}
		return returnList;
	}
	
	
	public static ArrayList<Integer> multiplesOf(List<Integer> list, int divisor){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i>0 && i%divisor==0) returnList.add(i);
		}
		return returnList;
	}
	public static ArrayList<Integer> multiplesOf(int divisor, Integer ...args){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (int i = 0; i < args.length; i++) {
			if(args[i]>0 && args[i]%divisor==0) returnList.add(args[i]);
		}
		return returnList;
	}

	public static ArrayList<Integer> oddAndDivisibleBy(List<Integer> list, int divisor){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i>0 && i%2!=0 && i%divisor==0) returnList.add(i);
		}
		return returnList;
	}
	public static ArrayList<Integer> evenAndDivisibleBy(List<Integer> list, int divisor){
		ArrayList<Integer> returnList = new ArrayList<Integer>();
		for (Iterator<Integer> iterator = list.iterator(); iterator.hasNext();) {
			Integer i = (Integer) iterator.next();
			if(i>0 && i%2==0 && i%divisor==0) returnList.add(i);
		}
		return returnList;
	}
	public static void foobar(List<Integer> list){
		ArrayList<Integer> listOf3 = divisibleBy(list, 3);
		ArrayList<Integer> listOf5 = divisibleBy(list, 5);
		for(int i= 0; i<=100;i++){
			boolean flag = false;
			if(listOf3.contains(i)){
				System.out.print("foo ");
				flag = true;
			}
			if(listOf5.contains(i)){
				System.out.print("bar ");
				flag = true;
			}
			if(!flag)System.out.print(i);
			System.out.println();
		}
	}
	public static void planets(List<Integer> list){
		ArrayList<Integer> listOf3 = divisibleBy(list, 3);
		ArrayList<Integer> listOf5 = divisibleBy(list, 5);
		ArrayList<Integer> listOf9 = divisibleBy(list, 9);
		for(int i= 0; i<=100;i++){
			boolean flag = false;
			if(listOf3.contains(i)){
				System.out.print("Earth ");
				flag = true;
			}
			if(listOf5.contains(i)){
				System.out.print("Jupiter ");
				flag = true;
			}
			if(listOf9.contains(i)){
				System.out.print("Pluto ");
				flag = true;
			}
			if(!flag)System.out.print(i);
			System.out.println();
		}
	}
}
